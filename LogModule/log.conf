#定义Root category的属性
#1、log4cpp.rootCategory: 设置根级别的日志类别。
#2、DEBUG: 表示最低的日志级别为 DEBUG，这意味着所有高于或等于 DEBUG 级别的日志消息都会被记录。
#3、ootLog: 指定与该根类别关联的日志 appender 名称。
log4cpp.rootCategory=DEBUG, RootLog

#定义RootLog属性
#1、log4cpp.appender.RootLog: 定义名为 RootLog 的 appender。
#2、RollingFileAppender: 表示这是一个滚动文件记录器，它会根据条件将日志写入到多个文件中。
#3、PatternLayout: 指定日志输出的格式模式。
log4cpp.appender.RootLog=RollingFileAppender
log4cpp.appender.RootLog.layout=PatternLayout

#1、ConversionPattern: 定义了日志的具体输出格式。
#2、%d: 当前时间戳。
#3、%m: 日志消息内容。
#4、%n: 换行符。
#5、[%t]: 线程 ID。
#6、[%p]: 日志级别。
#log4cpp.appender.RootLog.layout.ConversionPattern=%d{% m-%d %H:%M:%S %l} [%t][%p]%m%n
log4cpp.appender.RootLog.layout.ConversionPattern=%d{%m-%d %H:%M:%S %l} [%t][%p]-----%m%n

#1、fileName: 指定初始日志文件名。
#2、maxFileSize: 设置单个日志文件的最大大小，这里设置为 256 MB。
#3、fileNamePattern: 设置滚动日志文件的名字模式，其中 %i 是占位符，表示序列号。
#4、maxBackupIndex: 设置最多保留多少个备份文件，默认值是 0，意味着不保留任何备份文件。如果设置为非零值，则会在达到最大文件大小后创建新的日志文件，并删除旧的备份文件，直到达到指定的最大备份数量。
log4cpp.appender.RootLog.fileName=./IndustrialControlScreen.log
log4cpp.appender.RootLog.maxFileSize=268435456 #256MB
log4cpp.appender.RootLog.fileNamePattern=IndustrialControlScreen_%i.log
log4cpp.appender.RootLog.maxBackupIndex=256
